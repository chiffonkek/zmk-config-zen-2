/*                KEY POSITIONS

  ╭─────────────────────╮ ╭─────────────────────╮
  │ LT4 LT3 LT2 LT1 LT0 │ │ RT0 RT1 RT2 RT3 RT4 │
  │ LM4 LM3 LM2 LM1 LM0 │ │ RM0 RM1 RM2 RM3 RM4 │
  │ LB4 LB3 LB2 LB1 LB0 │ │ RB0 RB1 RB2 RB3 RB4 │
  ╰───────╮ LH2 LH1 LH0 │ │ RH0 RH1 RH2 ╭───────╯
          ╰─────────────╯ ╰─────────────╯ */

#define COMBO_TERM_FAST 20
#define COMBO_TERM_SLOW 35

#define COMBO_IDLE_FAST 150
#define COMBO_IDLE_SLOW 50

// Make homerow combos tap-only (so HRMs can be chorded instantaneously) (usage instructions as below)
// if combo invokes behavior that is not just a keypress, must create a custom behavior in keymap file under [MAKE_HRM] section then write [tap] result as 0 (dummy target)
// if combo is just a regular keypress, then just refer the side that the combo takes place on [&hml or &hmr] then write the tap result as the intended keypress
// structure and example is as follows:
// #define [label] [invoked behavior] [hold result] [tap result]
// #define HRC_TAB    &hml         LS(LALT) TAB
// #define HRC_LPAR   &hmr_lpar_lt RS(LCTRL) 0

#define HRC_CAP      &hml    LS(RSHFT)  CAPS
#define HRC_RET      &hmr    RA(LGUI)   RET
#define HRC_WRDL     &hmr    RS(LCTRL)  LC(LEFT)
#define HRC_WRDR     &hmr    RC(LALT)   LC(RIGHT)

#define DSK_PREV     &kp LG(LC(LEFT))       // previous desktop
#define DSK_NEXT     &kp LG(LC(RIGHT))      // next desktop

/* Horizontal combos - left hand */
ZMK_COMBO(tab,       &kp TAB,           LT4 LT3,     DEF FN NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(esc,       &kp ESC,           LT3 LT2,     DEF FN NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(mouse,     &smart_mouse,      LT1 LT3,     DEF FN NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)

ZMK_COMBO(dskprv,    DSK_PREV,          LB4 LB3,     DEF FN NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(copy,      &copy_cut,         LB3 LB2,     DEF FN NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(paste,     &kp LS(INS),       LB2 LB1,     DEF FN NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)

/* Horizontal combos - right hand */
ZMK_COMBO(bspc,      &kp BSPC,          RT4 RT3,     DEF FN NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(pgdn,      &kp PG_DN,         RT3 RT2,     DEF FN NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(pgup,      &kp PG_UP,         RT2 RT1,     DEF FN NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(del,       &kp DEL,           RT1 RT0,     DEF FN NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(grk,       &sl UC,            RT3 RT1,     DEF FN NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(cpgrk,     &sls 0,            RT1 RT2 RT3, DEF FN NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)

ZMK_COMBO(ret,       HRC_RET,           RM4 RM3,     DEF FN NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(wrdr,      HRC_WRDR,          RM3 RM2,     DEF FN NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(wrdl,      HRC_WRDL,          RM2 RM1,     DEF FN NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(ins,       &kp INS,           RM1 RM0,     DEF FN NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)

ZMK_COMBO(dsknext,   DSK_NEXT,          RB4 RB3,     DEF FN NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(rbkt,      &kp RBKT,          RB3 RB2,     DEF FN NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(lbkt,      &kp LBKT,          RB2 RB1,     DEF FN NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)

/* Vertical combos - left hand */
ZMK_COMBO(excl,      &kp EXCL,          LT4 LM4,     DEF FN NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(at,        &kp AT,            LT3 LM3,     DEF FN NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(hash,      &kp HASH,          LT2 LM2,     DEF FN NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(dllr,      &kp DLLR,          LT1 LM1,     DEF FN NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(prcnt,     &kp PRCNT,         LT0 LM0,     DEF FN NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)

ZMK_COMBO(grave,     &kp GRAVE,         LM4 LB4,     DEF FN NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(equal,     &kp EQUAL,         LM3 LB3,     DEF FN NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(bslh,      &kp BSLH,          LM2 LB2,     DEF FN NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(pipe,      &kp PIPE,          LM1 LB1,     DEF FN NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(minus,     &kp MINUS,         LM0 LB0,     DEF FN NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)

/* Vertical combos - right hand */
ZMK_COMBO(caret,     &kp CARET,         RT0 RM0,     DEF FN NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(amps,      &kp AMPS,          RT1 RM1,     DEF FN NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(star,      &kp STAR,          RT2 RM2,     DEF FN NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(swp1,      &prog_swap,        RT3 RM3,     DEF FN NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(swp2,      &lang_swap,        RT4 RM4,     DEF FN NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)

ZMK_COMBO(under,     &kp UNDER,         RM0 RB0,     DEF FN NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(lpar,      &lpar_lt,          RM1 RB1,     DEF FN NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(fslh,      &kp FSLH,          RM2 RB2,     DEF FN NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(rpar,      &rpar_gt,          RM3 RB3,     DEF FN NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)

/* Diagonal combos - right hand */
ZMK_COMBO(home,      &kp HOME,          RT2 RM1,     DEF FN NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(end,       &kp END,           RT2 RM3,     DEF FN NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)

/* Horizontal combos - cross hand */
ZMK_COMBO(caps,      &kp CAPS,          LM1 RM1,     DEF       , COMBO_TERM_FAST, COMBO_IDLE_FAST)
